# -*- mode: sh -*-

# --- anything風に履歴を検索するためのメニュー。

## 各固定値
typeset -A HISTORY_INCREMENTAL_KEYS
set -A HISTORY_INCREMENTAL_KEYS A 1 S 2 D 3 F 4 G 5 H 6 J 7 K 8 L 9 Q 10 \
    W 11 E 12 R 13 T 14 Y 15 U 16 I 17 O 18 P 19 Z 20 X 21 C 22 V 23 B 24 N 25 M 26

ISHR_MENU_LENGTH=26

# 設定値
ISHR_BASEFILE=/tmp/ishr.tmp
ISHR_URI="localhost:12345"
ISHR_ASYNC_PATH=~/.zsh/ishr-async.rb

### 内部使用値
ISHR_PREVIOUS_QUERY=""
typeset -A ISHR_PREVIOUS_RESULTS

ishr-init-variables() {
    # 各内部変数のリセット
    emulate -L zsh
    ISHR_PREVIOUS_QUERY=""
}

###################################
# 疑似非同期検索のためのinterrupt #
###################################

function ishr-display-result() {
    emulate -L zsh


    local query="$*"
    ishr-search-history "$query"

    local target_file=$ISHR_PREVIOUS_RESULTS[(e)$query]

    if [[ -e $target_file ]] ; then
        zle -M "`ruby -e 'puts \"query : \" + ARGV[1] ; %w[A S D F G H J K L Q W E R T Y U I O P Z X C V B N M].zip(open(ARGV[0]).readlines){|k,l| print %[#{k}: #{l}]}' =(head -$ISHR_MENU_LENGTH $target_file) "$query"`"
        zle -R
    else
        zle -M "now searching $query. I'm sorry, can't redisplay automaticalty."
        zle -R
    fi
}

###################################
# 実際に検索/履歴決定を行う関数群 #
###################################

function ishr-search-history() {
    emulate -L zsh
    local query=$1
    local target_file=""

    (( $+ISHR_PREVIOUS_RESULTS[(e)$query] )) && target_file="${ISHR_PREVIOUS_RESULTS[$query]}"

    # 前回の検索結果を使い回せない場合には、再度全件検索とする。
    if [[ ! -e "$target_file" || -z "$target_file" ]]; then
        # クエリに対するファイルを割り振る。
        ISHR_PREVIOUS_RESULTS+=($query ${ISHR_BASEFILE}.`ls ${ISHR_BASEFILE}* | wc -l`)
        target_file="${ISHR_PREVIOUS_RESULTS[$query]}"

        ishr-search-history-regexp "$query" $target_file
    fi

    ISHR_PREVIOUS_QUERY="$query"
}

function ishr-dicision-history-regexp() {
    emulate -L zsh
    local key=$1

    # 特定キーが押されたら、該当する位置の履歴をバッファに表示する。
    if [[ -n "${HISTORY_INCREMENTAL_KEYS[$key]}" && -n "$ISHR_PREVIOUS_QUERY" ]]; then
        zle -A .self-insert self-insert

        local fname=$ISHR_PREVIOUS_RESULTS[${(e)ISHR_PREVIOUS_QUERY}]
        BUFFER="`head -${HISTORY_INCREMENTAL_KEYS[$key]} $fname | tail -1 | perl -pe 's/\\\\n/\\021\\n/g'`"
        zle -R -c

        zle accept-line
    fi
}

function ishr-search-history-regexp() {
    emulate -L zsh
    local q="$1" target_file=$2
    local uri="druby://$ISHR_URI"

    cp $ISHR_BASEFILE $target_file.1
    ruby -rdrb -e "DRbObject.new_with_uri(ARGV.shift).add_search(*ARGV)" \
        $uri "$target_file.1" $target_file "$q"

}

#########################################################
# incremental-search-history-menu内部で利用する内部関数 #
#########################################################

function ishr-update-status() {
    emulate -L zsh
    [[ -n "$BUFFER" ]] && ishr-display-result "$BUFFER"
}

function ishr-stop-interrupt() {
    emulate -L zsh

    ishr-init-variables
}

#########################################################

####################################################
# デフォルトのzleを上書きしてトラップするためのzle #
####################################################

zle -N ishr-self-insert
function ishr-self-insert() {
    emulate -L zsh
    LBUFFER+=${KEYS[-1]}
    ishr-dicision-history-regexp ${KEYS[-1]}
    [[ "${KEYS[-1]}" != " " ]] && ishr-update-status
}

zle -N ishr-backward-delete-char
function ishr-backward-delete-char() {
    emulate -L zsh
    zle .backward-delete-char

    # 一文字削除して、検索クエリを再度設定する。
    ishr-update-status
}

zle -N ishr-accept-line
function ishr-accept-line() {
    emulate -L zsh
    ishr-stop-interrupt
    zle .accept-line
}

zle -N ishr-reset-results
function ishr-reset-results() {
    # 保存されている検索結果を破棄する。
    emulate -L zsh
    ishr-stop-interrupt

    typeset -A ISHR_PREVIOUS_RESULTS
    ISHR_PREVIOUS_RESULTS=()

    rm ${ISHR_BASEFILE}*

    history -n 1 | uniq > $ISHR_BASEFILE

    zle -M "delete all history searched cache !"
    zle -R
}

#######################################
# incremental-search-history-menu本体 #
#######################################

zle -N incremental-search-history-menu
function incremental-search-history-menu() {
    # インクリメンタル履歴検索を行えるように準備等を行う。
    emulate -L zsh
    integer stat

    # 初回限定で、履歴全体をuniq化して保持しておく。
    history -n 1 | uniq > $ISHR_BASEFILE

    # 各種必要な変数の初期化。
    ishr-init-variables

    # 非同期検索用サーバの開始
    local uri="druby://$ISHR_URI"
    $ISHR_ASYNC_PATH $uri 2> log.log 1> log.log &|
    local ishrpid=$!

    # 正規表現によるインクリメンタル検索を行う。

    zle -N kill-whole-line ishr-reset-results
    zle -N self-insert ishr-self-insert
    zle -N backward-delete-char ishr-backward-delete-char
    zle -N accept-line ishr-accept-line
    zle recursive-edit
    stat=$?
    zle -A .kill-whole-line kill-whole-line
    zle -A .self-insert self-insert
    zle -A .backward-delete-char backward-delete-char
    zle -A .accept-line accept-line

    # 各種終了処理
    ishr-stop-interrupt

    zle -R -c

    # 非同期検索用サーバの終了
    kill -9 $ishrpid 2> /dev/null &|

    (( stat )) && zle send-break

    return $?
}

